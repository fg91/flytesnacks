name: Build & Push Docker Images

on:
  pull_request:
  create:
    tags:
      - v*

jobs:
  # Lists all directories that have Dockerfile in them...
  list:
    runs-on: ubuntu-latest
    name: "Create a list of packages"
    steps:
      - uses: actions/checkout@v2
      - name: "Provide the list"
        id: create-list
        run: echo "::set-output name=packages::$(find cookbook -mindepth 1 -maxdepth 5 -type f -name Dockerfile -exec dirname '{}' \; | sort | jq --raw-input . | jq --slurp . | jq -c .)"
    outputs:
      packages: "${{ steps.create-list.outputs.packages }}"

  push-github:
    name: Build & Push to GHCR
    runs-on: ubuntu-latest
    needs: ["list"]
    strategy:
      matrix:
        directory: "${{ fromJson(needs.list.outputs.packages) }}"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: 'Set example name'
        id: example_id
        # add a step output `steps.build_id.outputs.id` as the unique id
        run: |
          echo "::set-output name=id::$(basename -- ${{ matrix.directory }})"
          temp=${{ matrix.directory }}
          echo "::set-output name=path::$(echo "./${temp%/*}")"
      - name: Prepare ${{ steps.example_id.outputs.id }} Image
        id: tags
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/flytecookbook
          tags: |
            ${{ steps.example_id.outputs.id }}-latest
            type=sha,format=long, prefix=${{ steps.example_id.outputs.id }}-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ hashFiles(${{ steps.example_id.outputs.path }}/${{ steps.example_id.outputs.id }}/Dockerfile) }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx
      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: "${{ secrets.FLYTE_BOT_USERNAME }}"
          password: "${{ secrets.FLYTE_BOT_PAT }}"
      - name: Build and push ${{ steps.example_id.outputs.id }} Image
        uses: docker/build-push-action@v2
        with:
          context: ${{ steps.example_id.outputs.path }}
          platforms: linux/arm64, linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.tags.outputs.tags }}
          build-args: "tag=ghcr.io/${{ github.repository_owner }}/flytecookbook:${{ steps.example_id.outputs.id }}-${{ github.sha }}"
          file: ${{ steps.example_id.outputs.id }}/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache